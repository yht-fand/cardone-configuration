<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
   		http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd">
    <lang:groovy id="top.cardone.configuration.listener.DictionaryTypeGenerateListener">
        <lang:inline-script>
            <![CDATA[
            def environment = top.cardone.context.ApplicationContextHolder.applicationContext.environment

            if (!(environment.getProperty("cardone.generateListener.enable", Boolean.class, true) ||
                    environment.getProperty("cardone.dictionaryTypeGenerateListener.enable", Boolean.class, false))) {
                return "cardone.dictionaryTypeGenerateListener.enable:false"
            }

            new top.cardone.data.listener.GenerateListener(serviceBeanId: "top.cardone.configuration.service.DictionaryTypeService",
                    saveList: [[variableCode: "dictionaryTypeTree", value: "yes"]])
            ]]>
        </lang:inline-script>
    </lang:groovy>

    <lang:groovy id="top.cardone.configuration.listener.NavigationGenerateListener">
        <lang:inline-script>
            <![CDATA[
            def environment = top.cardone.context.ApplicationContextHolder.applicationContext.environment

            if (!(environment.getProperty("cardone.generateListener.enable", Boolean.class, true) ||
                    environment.getProperty("cardone.navigationGenerateListener.enable", Boolean.class, false))) {
                return "cardone.navigationGenerateListener.enable:false"
            }

            new top.cardone.data.listener.GenerateListener(serviceBeanId: "top.cardone.configuration.service.NavigationService",
                    saveList: [[variableCode: "navigationTree", value: "yes"]])
            ]]>
        </lang:inline-script>
    </lang:groovy>

    <lang:groovy id="top.cardone.configuration.listener.DictionaryGenerateListener">
        <lang:inline-script>
            <![CDATA[
            def environment = top.cardone.context.ApplicationContextHolder.applicationContext.environment

            if (!(environment.getProperty("cardone.generateListener.enable", Boolean.class, true) ||
                    environment.getProperty("cardone.dictionaryGenerateListener.enable", Boolean.class, false))) {
                return "cardone.dictionaryGenerateListener.enable:false"
            }

            new top.cardone.data.listener.GenerateListener(serviceBeanId: "top.cardone.configuration.service.DictionaryService",
                    saveList: [[variableCode: "userSync", value: "yes"], [variableCode: "departmentSync", value: "yes"]])
            ]]>
        </lang:inline-script>
    </lang:groovy>

    <lang:groovy id="top.cardone.configuration.listener.SiteGenerateListener">
        <lang:inline-script>
            <![CDATA[
            def environment = top.cardone.context.ApplicationContextHolder.applicationContext.environment

            if (!(environment.getProperty("cardone.generateListener.enable", Boolean.class, true) ||
                    environment.getProperty("cardone.siteGenerateListener.enable", Boolean.class, false))) {
                return "cardone.siteGenerateListener.enable:false"
            }

            new top.cardone.data.listener.GenerateListener(serviceBeanId: "top.cardone.configuration.service.SiteService",
                    saveList: [
                    [variableCode: "siteTree", value: "yes"],
                    [variableCode: "userSync", value: "yes"],
                    [variableCode: "departmentSync", value: "yes"]
            ])
            ]]>
        </lang:inline-script>
    </lang:groovy>

    <lang:groovy id="top.cardone.configuration.listener.I18nInfoGenerateListener">
        <lang:inline-script>
            <![CDATA[
            def environment = top.cardone.context.ApplicationContextHolder.applicationContext.environment

            if (!(environment.getProperty("cardone.generateListener.enable", Boolean.class, true) ||
                    environment.getProperty("cardone.i18nInfoGenerateListener.enable", Boolean.class, false))) {
                return "cardone.i18nInfoGenerateListener.enable:false"
            }

            new top.cardone.data.listener.GenerateListener(serviceBeanId: "top.cardone.configuration.service.I18nInfoService",
                    saveList: [[variableCode: "i18nInfoUpdateOther", value: "yes"]])
            ]]>
        </lang:inline-script>
    </lang:groovy>
</beans>